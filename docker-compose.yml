version: "3.9"
services:
    csv_generation:
        build: ./services/csv-generation
        image: treat/csv-generation
        ports:
            - "${CSV_GENERATION_SERVICE_PORT}:${CSV_GENERATION_SERVICE_PORT}"
        volumes:
            - ./services/csv-generation:/app
        environment:
            - PORT=${CSV_GENERATION_SERVICE_PORT}
            - MONGODB_URL=${CSV_GENERATION_SERVICE_MONGODB_URL}
        command: ./start.sh
    data_collection:
        build: ./services/data-collection
        image: treat/data-collection
        ports:
            - "${DATA_COLLECTION_SERVICE_PORT}:${DATA_COLLECTION_SERVICE_PORT}"
        volumes:
            - ./services/data-collection:/app
        environment:
            - PORT=${DATA_COLLECTION_SERVICE_PORT}
            - MONGODB_URL=${DATA_COLLECTION_SERVICE_MONGODB_URL}
        command: ./start.sh
    discovery:
        build: ./services/discovery
        image: treat/discovery
        ports:
            - "${DISCOVERY_SERVICE_PORT}:${DISCOVERY_SERVICE_PORT}"
        volumes:
            - ./services/discovery:/app
        environment:
            - PORT=${DISCOVERY_SERVICE_PORT}
            - MONGODB_URL=${DISCOVERY_SERVICE_MONGODB_URL}
        command: ./start.sh
    experiment_registry:
        build: ./services/experiment-registry
        image: treat/experiment-registry
        ports:
            - "${EXPERIMENT_REGISTRY_SERVICE_PORT}:${EXPERIMENT_REGISTRY_SERVICE_PORT}"
        volumes:
            - ./services/experiment-registry:/app
        environment:
            - PORT=${EXPERIMENT_REGISTRY_SERVICE_PORT}
            - MONGODB_URL=${EXPERIMENT_REGISTRY_SERVICE_MONGODB_URL}
        command: ./start.sh
    experiment_session:
        build: ./services/experiment-session
        ports:
            - "${EXPERIMENT_SESSION_SERVICE_PORT}:${EXPERIMENT_SESSION_SERVICE_PORT}"
        volumes:
            - ./services/experiment-session:/app
        environment:
            - PORT=${EXPERIMENT_SESSION_SERVICE_PORT}
            - MONGODB_URL=${EXPERIMENT_SESSION_SERVICE_MONGODB_URL}
            - DISCOVERY_SERVICE_URL=http://discovery:${DISCOVERY_SERVICE_PORT}
        command: ./start.sh
    experiment_template:
        build: ./services/experiment-template
        ports:
            - "${EXPERIMENT_TEMPLATE_SERVICE_PORT}:${EXPERIMENT_TEMPLATE_SERVICE_PORT}"
        volumes:
            - ./services/experiment-template:/app
        environment:
            - PORT=${EXPERIMENT_TEMPLATE_SERVICE_PORT}
            - MONGODB_URL=${EXPERIMENT_TEMPLATE_SERVICE_MONGODB_URL}
            - DISCOVERY_SERVICE_URL=http://discovery:${DISCOVERY_SERVICE_PORT}
        command: ./start.sh
    survey_questions:
        build: ./services/survey-questions
        ports:
            - "${SURVEY_QUESTIONS_SERVICE_PORT}:${SURVEY_QUESTIONS_SERVICE_PORT}"
        volumes:
            - ./services/survey-questions:/app
        environment:
            - PORT=${SURVEY_QUESTIONS_SERVICE_PORT}
            - MONGODB_URL=${SURVEY_QUESTIONS_SERVICE_MONGODB_URL}
        command: ./start.sh
    survey_template:
        build: ./services/survey-template
        ports:
            - "${SURVEY_TEMPLATE_SERVICE_PORT}:${SURVEY_TEMPLATE_SERVICE_PORT}"
        volumes:
            - ./services/survey-template:/app
        environment:
            - PORT=${SURVEY_TEMPLATE_SERVICE_PORT}
            - MONGODB_URL=${SURVEY_TEMPLATE_SERVICE_MONGODB_URL}
            - DISCOVERY_SERVICE_URL=http://discovery:${DISCOVERY_SERVICE_PORT}
        command: ./start.sh
    widget_registry:
        build: ./services/widget-registry
        ports:
            - "${WIDGET_REGISTRY_SERVICE_PORT}:${WIDGET_REGISTRY_SERVICE_PORT}"
        volumes:
            - ./services/widget-registry:/app
        environment:
            - PORT=${WIDGET_REGISTRY_SERVICE_PORT}
            - MONGODB_URL=${WIDGET_REGISTRY_SERVICE_MONGODB_URL}
        command: ./start.sh
    data_dashboard:
        build: ./web/data-dashboard
        ports:
            - "${DATA_DASHBOARD_PORT}:${DATA_DASHBOARD_PORT}"
        volumes:
            - ./web/data-dashboard:/app
        environment:
            - PORT=${DATA_DASHBOARD_PORT}
            - IA_ROOT=${DATA_DASHBOARD_IA_ROOT}
            - IA_APP_ID=${DATA_DASHBOARD_IA_APP_ID}
            - IA_PUB_KEY=${DATA_DASHBOARD_IA_PUB_KEY}
            - IA_SEC_KEY=${DATA_DASHBOARD_IA_SEC_KEY}
            - MONGODB_URL=${DATA_DASHBOARD_MONGODB_URL}
        command: ./start.sh
    graphql_api:
        build: ./services/graphql-api
        ports:
            - "${GRAPHQL_API_PORT}:${GRAPHQL_API_PORT}"
        volumes:
            - ./services/graphql-api:/app
        environment:
            - PORT=${GRAPHQL_API_PORT}
            - MONGODB_URL=${GRAPHQL_API_MONGODB_URL}
        command: ./start.sh
    api_gateway:
        build: ./services/api-gateway
        ports:
            - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
        volumes:
            - ./services/api-gateway:/app
        environment:
            - PORT=${API_GATEWAY_PORT}
            - MONGODB_URL=${API_GATEWAY_MONGODB_URL}
            - DISCOVERY_SERVICE_URL=http://discovery:${DISCOVERY_SERVICE_PORT}
        command: ./start.sh
    admin_dashboard:
        build: ./web/admin-dashboard
        ports:
            - "${ADMIN_DASHBOARD_PORT}:${ADMIN_DASHBOARD_PORT}"
        volumes:
            - ./web/admin-dashboard:/app
        environment:
            - PORT=${ADMIN_DASHBOARD_PORT}
            - API_ENDPOINT=http://graphql_api:${GRAPHQL_API_PORT}/graphql
            - APP_URL=${ADMIN_DASHBOARD_APP_URL}
        command: ./start.sh
    authentication:
        build: ./services/authentication
        ports:
            - "${AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}"
        volumes:
            - ./services/authentication:/app
        environment:
            - PORT=${AUTHENTICATION_SERVICE_PORT}
            - MONGODB_URL=${AUTHENTICATION_SERVICE_MOGODB_URL}
        command: ./start.sh
    student_app:
        build: ./web/student-app
        ports:
            - "${STUDENT_APP_PORT}:${STUDENT_APP_PORT}"
        volumes:
            - ./web/student-app:/app
        environment:
            - PORT=${STUDENT_APP_PORT}
            - API_ENDPOINT=http://graphql_api:${GRAPHQL_API_PORT}/graphql
        command: ./start.sh
    db:
        image: mongo
        volumes:
            - ./data:/data/db
